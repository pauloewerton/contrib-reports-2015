From abfa741920f9c6ea0e6ec46ac8484841a6d18f2e Mon Sep 17 00:00:00 2001
From: Paulo Ewerton Gomes Fragoso <pauloewerton@lsd.ufcg.edu.br>
Date: Tue, 7 Jul 2015 14:31:26 +0000
Subject: [PATCH] Adding Identity NGProjects Panel

This patch adds the Identity NGProjects panel and table.
To test it, set DISABLED to False in _3021_identity_ng_projects_panel.py
then go to url /identity/ngprojects.

Change-Id: Ie4708671e23e3b8efe8c72f8403c2ad8339be5bd
Partially-Implements: blueprint angularize-identity-projects
---
 .../dashboards/identity/ngprojects/__init__.py     |   0
 .../dashboards/identity/ngprojects/panel.py        |  27 ++++
 .../ngprojects/templates/ngprojects/index.html     |   8 +
 .../dashboards/identity/ngprojects/urls.py         |  22 +++
 .../dashboards/identity/ngprojects/views.py        |  17 +++
 .../dashboard/identity/projects/projects.module.js |   7 +-
 .../identity/projects/projects.module.spec.js      |  15 ++
 .../dashboard/identity/projects/projects.scss      |   7 +
 .../projects/table/projects-table.controller.js    |  96 ++++++++++++
 .../table/projects-table.controller.spec.js        | 163 +++++++++++++++++++++
 .../identity/projects/table/projects-table.html    |  87 +++++++++++
 .../enabled/_3021_identity_ng_projects_panel.py    |  28 ++++
 12 files changed, 475 insertions(+), 2 deletions(-)
 create mode 100644 openstack_dashboard/dashboards/identity/ngprojects/__init__.py
 create mode 100644 openstack_dashboard/dashboards/identity/ngprojects/panel.py
 create mode 100644 openstack_dashboard/dashboards/identity/ngprojects/templates/ngprojects/index.html
 create mode 100644 openstack_dashboard/dashboards/identity/ngprojects/urls.py
 create mode 100644 openstack_dashboard/dashboards/identity/ngprojects/views.py
 create mode 100644 openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.controller.js
 create mode 100644 openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.controller.spec.js
 create mode 100644 openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.html
 create mode 100644 openstack_dashboard/enabled/_3021_identity_ng_projects_panel.py

diff --git a/openstack_dashboard/dashboards/identity/ngprojects/__init__.py b/openstack_dashboard/dashboards/identity/ngprojects/__init__.py
new file mode 100644
index 0000000..e69de29
diff --git a/openstack_dashboard/dashboards/identity/ngprojects/panel.py b/openstack_dashboard/dashboards/identity/ngprojects/panel.py
new file mode 100644
index 0000000..eb94b41
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/ngprojects/panel.py
@@ -0,0 +1,27 @@
+# Licensed under the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License. You may obtain
+# a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+# License for the specific language governing permissions and limitations
+# under the License.
+
+from django.utils.translation import ugettext_lazy as _
+
+import horizon
+
+from openstack_dashboard.dashboards.identity import dashboard
+
+
+class NGProjects(horizon.Panel):
+    name = _("Projects")
+    slug = 'ngprojects'
+    policy_rules = (("identity", "identity:list_projects"),
+                    ("identity", "identity:list_user_projects"))
+
+
+dashboard.Identity.register(NGProjects)
diff --git a/openstack_dashboard/dashboards/identity/ngprojects/templates/ngprojects/index.html b/openstack_dashboard/dashboards/identity/ngprojects/templates/ngprojects/index.html
new file mode 100644
index 0000000..991b05f
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/ngprojects/templates/ngprojects/index.html
@@ -0,0 +1,8 @@
+{% extends 'base.html' %}
+{% load i18n %}
+{% block title %}{% trans "Projects" %}{% endblock %}
+
+{% block main %}
+  <ng-include src="'{{ STATIC_URL }}dashboard/identity/projects/table/projects-table.html'">
+  </ng-include>
+{% endblock %}
diff --git a/openstack_dashboard/dashboards/identity/ngprojects/urls.py b/openstack_dashboard/dashboards/identity/ngprojects/urls.py
new file mode 100644
index 0000000..c028169
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/ngprojects/urls.py
@@ -0,0 +1,22 @@
+# Licensed under the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License. You may obtain
+# a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+# License for the specific language governing permissions and limitations
+# under the License.
+
+from django.conf.urls import patterns
+from django.conf.urls import url
+
+from openstack_dashboard.dashboards.identity.ngprojects import views
+
+
+urlpatterns = patterns(
+    'openstack_dashboard.dashboards.identity.ngprojects.views',
+    url(r'^$', views.IndexView.as_view(), name='index'),
+)
diff --git a/openstack_dashboard/dashboards/identity/ngprojects/views.py b/openstack_dashboard/dashboards/identity/ngprojects/views.py
new file mode 100644
index 0000000..2e49628
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/ngprojects/views.py
@@ -0,0 +1,17 @@
+# Licensed under the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License. You may obtain
+# a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+# License for the specific language governing permissions and limitations
+# under the License.
+
+from django.views import generic
+
+
+class IndexView(generic.TemplateView):
+    template_name = 'identity/ngprojects/index.html'
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.js
index 1cf09af..ff58c08 100644
--- a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.js
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.js
@@ -20,13 +20,16 @@
    * @ng-module
    * @description
    * Provides all of the services and widgets required
-   * to support and display the identity projects.
+   * to support and display the Identity Projects panel.
    */
   angular
     .module('horizon.dashboard.identity.projects', [])
     .config(config);
 
-  config.$inject = ['$provide', '$windowProvider'];
+  config.$inject = [
+    '$provide',
+    '$windowProvider'
+  ];
 
   function config($provide, $windowProvider) {
     var path = $windowProvider.$get().STATIC_URL + 'dashboard/identity/projects/';
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.spec.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.spec.js
index 54e2753..9635266 100644
--- a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.spec.js
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.spec.js
@@ -21,4 +21,19 @@
     });
   });
 
+  describe('Identity projects base path constant', function() {
+    var identityProjectsBasePath, staticUrl;
+
+    beforeEach(module('horizon.dashboard.identity'));
+    beforeEach(module('horizon.dashboard.identity.projects'));
+    beforeEach(inject(function($injector) {
+      identityProjectsBasePath = $injector.get('horizon.dashboard.identity.projects.basePath');
+      staticUrl = $injector.get('$window').STATIC_URL;
+    }));
+
+    it('should equal to "/static/dashboard/identity/projects/"', function() {
+      expect(identityProjectsBasePath).toEqual(staticUrl + 'dashboard/identity/projects/');
+    });
+  });
+
 })();
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss
index e69de29..b69cc8d 100644
--- a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss
@@ -0,0 +1,7 @@
+table[ng-controller="IdentityProjectsTableController as tableCtrl"] {
+
+  .detail-expanded .row {
+    background: $table-bg;
+    padding-left: $padding-small-horizontal;
+  }
+}
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.controller.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.controller.js
new file mode 100644
index 0000000..1f08093
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.controller.js
@@ -0,0 +1,96 @@
+/**
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+(function() {
+  'use strict';
+
+  angular
+    .module('horizon.dashboard.identity.projects')
+    .controller('IdentityProjectsTableController', IdentityProjectsTableController);
+
+  IdentityProjectsTableController.$inject = [
+    '$q',
+    'horizon.framework.util.i18n.gettext',
+    'horizon.framework.widgets.toast.service',
+    'horizon.app.core.openstack-service-api.keystone',
+    'horizon.app.core.openstack-service-api.policy'
+  ];
+
+  /**
+   * @ngdoc controller
+   * @name IdentityProjectsTableController
+   * @description
+   * Controller for the Identity Projects table.
+   * Encapsulates all data and actions associated to
+   * the main projects view.
+   */
+  function IdentityProjectsTableController($q, gettext, toast, keystone, policy) {
+    var ctrl = this;
+
+    ctrl.displayedProjects = [];
+    ctrl.keystoneV3Enabled = false;
+    ctrl.projects = [];
+    ctrl.userSession = {};
+
+    init();
+
+    ////////////////////////////////
+
+    function init() {
+      var rulesAll = {rules: [['identity', 'identity:list_projects']]};
+      var rulesUser = {rules: [['identity', 'identity:list_user_projects']]};
+      var calls = {
+        keystone: keystone.getVersion(),
+        policyAll: policy.check(rulesAll),
+        policyUser: policy.check(rulesUser),
+        session: keystone.getCurrentUserSession()
+      };
+
+      $q.all(calls).then(initCallsSuccess);
+    }
+
+    function initCallsSuccess(response) {
+      setKeystoneV3Enabled(response.keystone);
+      setUserSession(response.session);
+      getProjects(response.policyAll, response.policyUser);
+    }
+
+    function setKeystoneV3Enabled(response) {
+      if (response.data.version >= 3) {
+        ctrl.keystoneV3Enabled = true;
+      }
+    }
+
+    function setUserSession(response) {
+      ctrl.userSession = response.data;
+    }
+
+    function getProjects(policyAll, policyUser) {
+      if (policyAll.data.allowed) {
+        keystone.getProjects().then(setProjects);
+      } else if (policyUser.data.allowed) {
+        var params = {user_id: ctrl.userSession.id, admin: false};
+        keystone.getProjects(params).then(setProjects);
+      } else {
+        var msg = gettext('Insufficient privilege level to view project information.');
+        toast.add('info', msg);
+      }
+    }
+
+    function setProjects(response) {
+      ctrl.projects = response.data.items;
+    }
+  }
+
+})();
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.controller.spec.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.controller.spec.js
new file mode 100644
index 0000000..75e7f36
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.controller.spec.js
@@ -0,0 +1,163 @@
+/**
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+(function() {
+  'use strict';
+
+  describe('Identity projects table controller', function() {
+    var $controller, $scope, keystone, policy, toast;
+
+    var fakeUser = {
+      id: '01',
+      username: 'user',
+      project_id: '01'
+    };
+    var fakeUserProjects = {
+      items: [
+        {id: '01'},
+        {id: '02'},
+        {id: '03'}
+      ]
+    };
+    var fakePass = {allowed: true};
+    var fakeVersion = {version: 2};
+    var rulesAll = {rules: [['identity', 'identity:list_projects']]};
+    var rulesUser = {rules: [['identity', 'identity:list_user_projects']]};
+
+    function fakeKeystoneVersion() {
+      return {
+        then: function fakePromise(callback) {
+          return callback({data: fakeVersion});
+        }
+      };
+    }
+
+    function fakePolicy() {
+      return {
+        then: function fakePromise(callback) {
+          return callback({data: fakePass});
+        }
+      };
+    }
+
+    function fakeProjects() {
+      return {
+        then: function fakePromise(callback) {
+          return callback({data: fakeUserProjects});
+        }
+      };
+    }
+
+    function fakeToast() {
+      return {
+        add: function() {}
+      };
+    }
+
+    function fakeUserSession() {
+      return {
+        then: function fakePromise(callback) {
+          return callback({data: fakeUser});
+        }
+      };
+    }
+
+    beforeEach(module('horizon.app.core'));
+    beforeEach(module('horizon.framework'));
+    beforeEach(module('horizon.dashboard.identity'));
+
+    beforeEach(inject(function($injector) {
+      $controller = $injector.get('$controller');
+      $scope = $injector.get('$rootScope').$new();
+
+      keystone = $injector.get('horizon.app.core.openstack-service-api.keystone');
+      spyOn(keystone, 'getCurrentUserSession').and.callFake(fakeUserSession);
+      spyOn(keystone, 'getProjects').and.callFake(fakeProjects);
+      spyOn(keystone, 'getVersion').and.callFake(fakeKeystoneVersion);
+
+      policy = $injector.get('horizon.app.core.openstack-service-api.policy');
+      spyOn(policy, 'check').and.callFake(fakePolicy);
+
+      toast = $injector.get('horizon.framework.widgets.toast.service');
+      spyOn(toast, 'add').and.callFake(fakeToast);
+    }));
+
+    it('should set keystoneV3Enabled to false by default', function() {
+      var tableCtrl = $controller('IdentityProjectsTableController');
+      $scope.$apply();
+      expect(keystone.getVersion).toHaveBeenCalled();
+      expect(tableCtrl.keystoneV3Enabled).toBeFalsy();
+    });
+
+    it('should set keystoneV3Enabled to true if keystone version 3 is enabled', function() {
+      fakeVersion.version = 3;
+      var tableCtrl = $controller('IdentityProjectsTableController');
+      $scope.$apply();
+      expect(keystone.getVersion).toHaveBeenCalled();
+      expect(tableCtrl.keystoneV3Enabled).toBeTruthy();
+    });
+
+    it('should retrieve current user session', function() {
+      var tableCtrl = $controller('IdentityProjectsTableController');
+      $scope.$apply();
+      expect(keystone.getCurrentUserSession).toHaveBeenCalled();
+      expect(tableCtrl.userSession).toEqual(fakeUser);
+    });
+
+    it('should retrieve all projects if policy passes', function() {
+      var tableCtrl = $controller('IdentityProjectsTableController');
+      $scope.$apply();
+      expect(policy.check).toHaveBeenCalledWith(rulesAll);
+      expect(keystone.getProjects).toHaveBeenCalled();
+      expect(tableCtrl.projects).toEqual(fakeUserProjects.items);
+    });
+
+    it('should retrieve current user projects if policy passes', function() {
+      // Overriding spy to cover branch where all projects listing is not
+      // allowed
+      policy.check.and.callFake(function fakeCheck(rules) {
+        var pass = {allowed: true};
+
+        if (angular.equals(rules, rulesAll)) {
+          pass.allowed = false;
+        }
+
+        return {
+          then: function fakePromise(callback) {
+            return callback({data: pass});
+          }
+        };
+      });
+
+      var tableCtrl = $controller('IdentityProjectsTableController');
+      $scope.$apply();
+      expect(policy.check).toHaveBeenCalledWith(rulesUser);
+      expect(keystone.getProjects).toHaveBeenCalledWith({
+        user_id: tableCtrl.userSession.id, admin: false
+      });
+      expect(tableCtrl.projects).toEqual(fakeUserProjects.items);
+    });
+
+    it('should not retrieve projects if policy fails', function() {
+      fakePass.allowed = false;
+      var tableCtrl = $controller('IdentityProjectsTableController');
+      $scope.$apply();
+      expect(policy.check).toHaveBeenCalled();
+      expect(toast.add).toHaveBeenCalled();
+      expect(keystone.getProjects).not.toHaveBeenCalled();
+      expect(tableCtrl.projects).toEqual([]);
+    });
+  });
+
+})();
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.html b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.html
new file mode 100644
index 0000000..fc3acc5
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/table/projects-table.html
@@ -0,0 +1,87 @@
+<hz-page-header header="{$ 'Projects' | translate $}"></hz-page-header>
+
+<table ng-controller="IdentityProjectsTableController as tableCtrl"
+       hz-table ng-cloak
+       st-table="tableCtrl.displayedProjects"
+       st-safe-src="tableCtrl.projects"
+       default-sort="name"
+       default-sort-reverse="false"
+       class="table-striped table-rsp table-detail modern">
+
+  <thead>
+    <tr>
+      <th colspan="100" class="search-header">
+        <hz-search-bar group-classes="input-group-sm" icon-classes="fa-search">
+        </hz-search-bar>
+      </th>
+    </tr>
+
+    <tr>
+      <th class="select-col">
+        <input type="checkbox" hz-select-all="tableCtrl.displayedProjects"/>
+      </th>
+
+      <th class="expander"></th>
+
+      <th class="rsp-p1" st-sort="name" st-sort-default="name" translate>Name</th>
+
+      <th class="rsp-p2" st-sort="description" translate>Description</th>
+
+      <th class="rsp-p1" st-sort="id" translate>Project ID</th>
+
+      <th class="rsp-p2 text-center" st-sort="enabled" translate>Enabled</th>
+    </tr>
+  </thead>
+
+  <tbody>
+    <tr ng-repeat-start="project in tableCtrl.displayedProjects track by project.id"
+        ng-class="{'st-selected': checked[project.id]}">
+      <td class="select-col">
+        <input type="checkbox"
+               ng-model="selected[project.id].checked"
+               hz-select="project">
+      </td>
+
+      <td class="expander">
+        <span class="fa fa-chevron-right" hz-expand-detail duration="200"></span>
+      </td>
+
+      <td class="rsp-p1">{$ project.name $}</td>
+
+      <td class="rsp-p2">{$ project.description | noValue $}</td>
+
+      <td class="rsp-p1">{$ project.id $}</td>
+
+      <td class="rsp-p2 text-center">
+        <span ng-show="project.enabled" class="fa fa-check text-success"></span>
+        <span ng-hide="project.enabled" class="fa fa-times text-danger"></span>
+      </td>
+    </tr>
+
+    <tr ng-repeat-end class="detail-row">
+      <td class="detail" colspan="100">
+        <div class="row">
+          <span class="rsp-alt-2">
+            <dl class="col-md-2"
+                ng-if="tableCtrl.keystoneV3Enabled && tableCtrl.userSession.is_superuser">
+                <dt translate>Domain ID</dt>
+                <dd>{$ project.domain_id $}</dd>
+            </dl>
+
+            <dl class="col-md-2">
+              <dt translate>Enabled</dt>
+              <dd>{$ project.enabled | yesno $}</dd>
+            </dl>
+
+            <dl class="col-md-2">
+              <dt translate>Description</dt>
+              <dd>{$ project.description || ('None' | translate) $}</dd>
+            </dl>
+          </span>
+        </div>
+      </td>
+    </tr>
+  </tbody>
+
+  <tfoot hz-table-footer items="tableCtrl.displayedProjects"></tfoot>
+</table>
diff --git a/openstack_dashboard/enabled/_3021_identity_ng_projects_panel.py b/openstack_dashboard/enabled/_3021_identity_ng_projects_panel.py
new file mode 100644
index 0000000..f08a1e0
--- /dev/null
+++ b/openstack_dashboard/enabled/_3021_identity_ng_projects_panel.py
@@ -0,0 +1,28 @@
+# Licensed under the Apache License, Version 2.0 (the "License"); you may
+# not use this file except in compliance with the License. You may obtain
+# a copy of the License at
+#
+#      http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
+# License for the specific language governing permissions and limitations
+# under the License.
+
+# The slug of the dashboard the PANEL associated with. Required.
+PANEL_DASHBOARD = 'identity'
+
+# The slug of the panel group the PANEL is associated with.
+# If you want the panel to show up without a panel group,
+# use the panel group "default".
+PANEL_GROUP = 'default'
+
+# The slug of the panel to be added to HORIZON_CONFIG. Required.
+PANEL = 'ngprojects'
+
+# If set to True, this settings file will not be added to the settings.
+DISABLED = True
+
+# Python panel class of the PANEL to be added.
+ADD_PANEL = 'openstack_dashboard.dashboards.identity.ngprojects.panel.NGProjects' #flake8: noqa
-- 
1.9.1

