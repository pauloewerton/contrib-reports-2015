From 52ef39c700d52651487a30e171abdc9ee3369988 Mon Sep 17 00:00:00 2001
From: Erickson Santos <erickson@lsd.ufcg.edu.br>
Date: Fri, 13 Nov 2015 17:47:09 -0300
Subject: [PATCH] Adding NGProjects Create Action - Members

This patch adds the members step to the create action
workflow.

To test, go to url /identity/ngprojects.

Co-Authored-By: Paulo Ewerton <pauloewerton@lsd.ufcg.edu.br>
Co-Authored-By: Iury Gregory <iurygregory@gmail.com>

Partially-Implements: blueprint angularize-identity-projects

Change-Id: Ie088ea97c92df17055ae74f98f656dffa7b154e1
---
 .../actions/projects-create.action.service.js      |  42 +++++-
 .../actions/projects-create.action.service.spec.js |  30 ++++-
 .../actions/projects-create.workflow.service.js    |   6 +
 .../dashboard/identity/projects/projects.module.js |   3 +-
 .../dashboard/identity/projects/projects.scss      |  14 ++
 .../steps/members/project-members-help.html        |   9 ++
 .../steps/members/project-members.controller.js    | 130 ++++++++++++++++++
 .../members/project-members.controller.spec.js     | 147 +++++++++++++++++++++
 .../projects/steps/members/project-members.html    |  81 ++++++++++++
 .../identity/projects/templates/projects/base.html |  11 ++
 10 files changed, 463 insertions(+), 10 deletions(-)
 create mode 100644 openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members-help.html
 create mode 100644 openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.controller.js
 create mode 100644 openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.controller.spec.js
 create mode 100644 openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.html
 create mode 100644 openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/templates/projects/base.html

diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.action.service.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.action.service.js
index 0f80742..2b23b02 100644
--- a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.action.service.js
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.action.service.js
@@ -48,11 +48,13 @@
 
     var messages = {
       projectSuccess: gettext('Project %s was successfully created.'),
-      nameUsed: gettext('Project name %s is already used.')
+      nameUsed: gettext('Project name %s is already used.'),
+      userSuccess: gettext('User %s was successfully assigned to project %s as %s.')
     };
 
     var model = {
-      project: {}
+      project: {},
+      users: []
     };
 
     var service = {
@@ -70,12 +72,14 @@
 
     function initScope($scope) {
       var createWatch = $scope.$on(events.projectChanged, onProjectChange);
-      $scope.$on('$destroy', destroy);
+      var membersWatch = $scope.$on(events.usersChanged, onUsersChange);
 
+      $scope.$on('$destroy', destroy);
       scope = $scope;
 
       function destroy() {
         createWatch();
+        membersWatch();
       }
     }
 
@@ -84,6 +88,11 @@
       evt.stopPropagation();
     }
 
+    function onUsersChange(evt, users) {
+      model.users = users;
+      evt.stopPropagation();
+    }
+
     ////////////////////
 
     function open(projects) {
@@ -115,8 +124,8 @@
 
       if (!nameExists) {
         return keystone.createProject(model.project)
-                   .then(onCreateProjectSuccess)
-                   .then(subflows);
+                 .then(onCreateProjectSuccess)
+                 .then(subflows);
       } else {
         toast.add('error', interpolate(messages.nameUsed, [model.project.name]));
         return $q.reject();
@@ -132,10 +141,29 @@
     }
 
     function subflows() {
-      // Members, Groups and Quota sublows will be triggered here
-      // in later patches. The promise should resolve nonetheless.
+      membersSubflow();
+
       return $q.when();
     }
+
+    function membersSubflow() {
+      if (model.users.length > 0) {
+        angular.forEach(model.users, grantRoles);
+      }
+    }
+
+    function grantRoles(user) {
+      angular.forEach(user.roles, function forEach(role) {
+        if (role.selected) {
+          keystone.grantRole(model.project.id, role.id, user.id)
+            .then(function onGrantRoleSuccess() {
+              var ref = [user.name, model.project.name, role.name];
+              var msg = interpolate(messages.userSuccess, ref);
+              toast.add('success', msg);
+            });
+        }
+      });
+    }
   }
 
 })();
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.action.service.spec.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.action.service.spec.js
index fd49009..6e24959 100644
--- a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.action.service.spec.js
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.action.service.spec.js
@@ -35,8 +35,9 @@
 
     var $modal = jasmine.createSpyObj('$modal', ['open']);
     var toast = jasmine.createSpyObj('toast', ['add']);
-    var keystone = jasmine.createSpyObj('keystone', ['createProject']);
+    var keystone = jasmine.createSpyObj('keystone', ['createProject', 'grantRole']);
     keystone.createProject.and.returnValue(promise);
+    keystone.grantRole.and.returnValue(promise);
 
     beforeEach(module('horizon.dashboard.identity.projects'));
 
@@ -70,12 +71,37 @@
       expect(toast.add).toHaveBeenCalledWith('success', jasmine.any(String));
     });
 
-    it('should have a handler for the createdProject event', function() {
+    it('should call keystone grantRole on submit if project has members', function() {
+      var users = [{ id: 1, roles: [{ id: 1, selected: true }] }];
+      toast.add.calls.reset();
+      $scope.$emit(events.projectChanged, project);
+      $scope.$emit(events.usersChanged, users);
+      service.submit();
+      expect($scope.$emit).toHaveBeenCalled();
+      expect(keystone.grantRole).toHaveBeenCalled();
+      expect(keystone.grantRole.calls.count()).toBe(users.length);
+      expect(toast.add).toHaveBeenCalledWith('success', jasmine.any(String));
+      var rolesCount = 0;
+      for (var i = 0; i < users.length; i++) {
+        rolesCount += users[i].roles.length;
+      }
+      // +1 accounting for the toast called for creating project
+      expect(toast.add.calls.count()).toBe(rolesCount + 1);
+    });
+
+    it('should have a handler for the projectChanged event', function() {
       expect(events.projectChanged).toBeDefined();
       /* eslint-disable angular/ng_no_private_call */
       expect($scope.$$listeners[events.projectChanged]).toBeDefined();
       /* eslint-enable angular/ng_no_private_call */
     });
+
+    it('should have a handler for the usersChanged event', function() {
+      /* eslint-disable angular/ng_no_private_call */
+      expect(events.usersChanged).toBeDefined();
+      expect($scope.$$listeners[events.usersChanged]).toBeDefined();
+      /* eslint-disable angular/ng_no_private_call */
+    });
   });
 
 })();
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.workflow.service.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.workflow.service.js
index 0f46bdc..53a7104 100644
--- a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.workflow.service.js
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/actions/projects-create.workflow.service.js
@@ -42,6 +42,12 @@
           templateUrl: path + 'details/project-details.html',
           helpUrl: path + 'details/project-details-help.html',
           formName: 'identityProjectsDetailsForm'
+        },
+        {
+          title: gettext('Select Members'),
+          templateUrl: path + 'members/project-members.html',
+          helpUrl: path + 'members/project-members-help.html',
+          formName: 'identityProjectsMembersForm'
         }
       ]
     });
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.js
index 78d6d3e..eb0e74c 100644
--- a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.js
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.module.js
@@ -36,7 +36,8 @@
 
     var events = {
       projectChanged: 'horizon.dashboard.identity.projects.events.PROJECT_CHANGED',
-      createSuccess: 'horizon.dashboard.identity.projects.events.CREATE_SUCCESS'
+      createSuccess: 'horizon.dashboard.identity.projects.events.CREATE_SUCCESS',
+      usersChanged: 'horizon.dashboard.identity.projects.events.USERS_CHANGED'
     };
 
     $provide.constant('horizon.dashboard.identity.projects.basePath', path);
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss
index b69cc8d..5877f26 100644
--- a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss
@@ -5,3 +5,17 @@ table[ng-controller="IdentityProjectsTableController as tableCtrl"] {
     padding-left: $padding-small-horizontal;
   }
 }
+
+.roles_list {
+  display: inline-block;
+  width: 125px;
+  line-height: 1;
+  padding-right: 6px;
+  overflow: hidden;
+  text-overflow: ellipsis;
+}
+
+.role_button {
+  padding: 0.5em 10px;
+  border-radius: 4px;
+}
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members-help.html b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members-help.html
new file mode 100644
index 0000000..a9faa20
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members-help.html
@@ -0,0 +1,9 @@
+<div translate>
+  To add a user to your project with a role, click on the plus icon in the available table.
+  To remove a user from the project, click on the minus icon in the allocated table.
+</div>
+
+<div translate>
+  Once you added a user to the project, the user will be given a default role.
+  You can change the role via the dropdown menu.
+</div>
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.controller.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.controller.js
new file mode 100644
index 0000000..a9c1ebe
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.controller.js
@@ -0,0 +1,130 @@
+/**
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+(function() {
+  'use strict';
+
+  angular
+    .module('horizon.dashboard.identity.projects')
+    .controller('IdentityProjectsMembersController', IdentityProjectsMembersController);
+
+  IdentityProjectsMembersController.$inject = [
+    '$q',
+    '$scope',
+    'horizon.app.core.openstack-service-api.keystone',
+    'horizon.app.core.openstack-service-api.settings',
+    'horizon.dashboard.identity.projects.events'
+  ];
+
+  /**
+    * @ngdoc controller
+    * @name IdentityProjectsMembersController
+    * @description
+    * Fetches users and display them in transfer table.
+   */
+  function IdentityProjectsMembersController($q, $scope, keystone, settings, events) {
+    var ctrl = this;
+
+    ctrl.dropboxItemSelected = dropboxItemSelected;
+    ctrl.roleNames = roleNames;
+
+    // using scope because of transfer table
+    /* eslint-disable angular/ng_controller_as */
+    $scope.limits = {maxAllocation: -1};
+    $scope.users = {available: [], allocated: []};
+    /* eslint-enable angular/ng_controller_as */
+
+    $scope.$watchCollection('users.allocated', onAllocated);
+
+    init();
+
+    /////////////////////////////////
+
+    function init() {
+      var calls = {
+        users: keystone.getUsers(),
+        roles: keystone.getRoles(),
+        defaultRole: settings.getSetting('OPENSTACK_KEYSTONE_DEFAULT_ROLE', '_member_')
+      };
+
+      $q.all(calls).then(function onInitCallsSuccess(response) {
+        setRoles(response.roles.data.items);
+        setDefaultRole(response.defaultRole);
+        setAvailableUsers(response.users.data.items);
+      });
+    }
+
+    /////////////////////////////////
+
+    function setRoles(roles) {
+      ctrl.roles = roles;
+    }
+
+    function setDefaultRole(roleName) {
+      angular.forEach(ctrl.roles, function(role) {
+        if (role.name === roleName) {
+          ctrl.defaultRole = role;
+          return;
+        }
+      });
+    }
+
+    function setAvailableUsers(users) {
+      angular.forEach(users, assignDefaultRoleToUser);
+      Array.prototype.push.apply($scope.users.available, users);
+    }
+
+    function assignDefaultRoleToUser(user) {
+      user.roles = angular.copy(ctrl.roles);
+
+      angular.forEach(user.roles, function forEach(role) {
+        if (role.name === ctrl.defaultRole.name) {
+          role.selected = true;
+        }
+      });
+    }
+
+    function onAllocated(newValue, oldValue) {
+      if (newValue !== oldValue) {
+        $scope.$emit(events.usersChanged, newValue);
+      }
+    }
+
+    /////////////////////////////////
+
+    function dropboxItemSelected(role) {
+      if (angular.isUndefined(role.selected) || !role.selected) {
+        role.selected = true;
+      } else {
+        role.selected = false;
+      }
+    }
+
+    function roleNames(roles) {
+      var roleNames = '';
+
+      angular.forEach(roles, function forEach(role) {
+        if (role.selected) {
+          roleNames += role.name;
+          roleNames += ',';
+        }
+      });
+
+      return (roleNames.length === 0 ?
+                gettext('No roles') :
+                roleNames.slice(0, roleNames.length - 1));
+    }
+  }
+
+})();
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.controller.spec.js b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.controller.spec.js
new file mode 100644
index 0000000..303503b
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.controller.spec.js
@@ -0,0 +1,147 @@
+/**
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *    http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+(function() {
+  'use strict';
+
+  describe('Identity Projects members controller', function() {
+    var $scope, ctrl;
+
+    var fakeRoles = {
+      data: {
+        items: [
+          { id: 123, name: '_member_' },
+          { id: 345, name: 'admin' }
+        ]
+      }
+    };
+
+    var fakeUsers = {
+      data: {
+        items: [
+          { id: 123, name: 'user1' },
+          { id: 345, name: 'user2' }
+        ]
+      }
+    };
+
+    var fakeData = {
+      defaultRole: '_member_',
+      roles: fakeRoles,
+      users: fakeUsers
+    };
+
+    var fakeQ = {
+      defer: angular.noop,
+      all: function() {
+        return {
+          then: function(successFn) {
+            successFn(fakeData);
+          }
+        };
+      }
+    };
+
+    var fakeKeystone = {
+      getUsers: angular.noop,
+      getRoles: angular.noop
+    };
+
+    var fakeSettings = {
+      getSetting: angular.noop
+    };
+
+    beforeEach(module('horizon.dashboard.identity.projects'));
+    beforeEach(module(function($provide) {
+      $provide.value('horizon.app.core.openstack-service-api.keystone', fakeKeystone);
+      $provide.value('horizon.app.core.openstack-service-api.settings', fakeSettings);
+    }));
+
+    beforeEach(inject(function($controller, $rootScope) {
+      $scope = $rootScope.$new();
+
+      ctrl = $controller('IdentityProjectsMembersController', {
+        $q: fakeQ,
+        $scope: $scope,
+        keystone: fakeKeystone,
+        settings: fakeSettings,
+        events: {}
+      });
+    }));
+
+    it('should retrieve and store the default role', function setDefaultRole() {
+      expect(ctrl.defaultRole.name).toBe(fakeData.defaultRole);
+    });
+
+    it('should fetch the list of available users', function setAvailableUsers() {
+      expect($scope.users.available.length).toEqual(fakeUsers.data.items.length);
+    });
+
+    it('should have the default role selected at controller creation', function defaultSelected() {
+      angular.forEach($scope.users.available, function forEachUser(user) {
+        angular.forEach(user.roles, function forEachRole(role) {
+          if (role.name === ctrl.defaultRole.name) {
+            expect(role.selected).toBeTruthy();
+          }
+        });
+      });
+    });
+
+    it('should broadcast allocated users when allocated list changes', function onAllocated() {
+      spyOn($scope, '$emit');
+      $scope.$apply();
+
+      $scope.users.allocated.push('fake');
+      $scope.$apply();
+      expect($scope.$emit).toHaveBeenCalled();
+    });
+
+    it('should select user role when role.selected is undefined/false', function roleUndefined() {
+      var user = $scope.users.available[0];
+      fakeRoles.data.items[0].selected = true;
+      expect(user.roles).toEqual(fakeRoles.data.items);
+      ctrl.dropboxItemSelected(user.roles[1]);
+      expect(user.roles[1].selected).toBeTruthy();
+    });
+
+    it('should deselect user role when role.selected is true', function roleSelected() {
+      var user = $scope.users.available[0];
+      fakeRoles.data.items[0].selected = true;
+      expect(user.roles).toEqual(fakeRoles.data.items);
+      ctrl.dropboxItemSelected(user.roles[0]);
+      expect(user.roles[0].selected).toBeFalsy();
+    });
+
+    it('should return "No roles" when no role is selected', function roleNamesNoRoleSelected() {
+      var user = $scope.users.available[0];
+      user.roles[0].selected = false;
+      var names = ctrl.roleNames(user.roles);
+      expect(names).toEqual('No roles');
+    });
+
+    it('should return default selected role name', function roleNamesOneRole() {
+      var user = $scope.users.available[0];
+      var names = ctrl.roleNames(user.roles);
+      expect(names).toEqual(ctrl.defaultRole.name);
+    });
+
+    it('should return selected role names separated by comma', function roleNamesTwoRoles() {
+      var user = $scope.users.available[0];
+      user.roles[1].selected = true;
+      var names = ctrl.roleNames(user.roles);
+      expect(names).toEqual(fakeRoles.data.items[0].name + ',' + fakeRoles.data.items[1].name);
+    });
+  });
+
+})();
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.html b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.html
new file mode 100644
index 0000000..7be866b
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/steps/members/project-members.html
@@ -0,0 +1,81 @@
+<div ng-controller="IdentityProjectsMembersController as membersCtrl">
+
+  <h1 translate>Select Members</h1>
+
+  <div class="content">
+    <div class="subtitle" translate>
+      Add members to your new project from the list of all available users.
+    </div>
+
+    <transfer-table tr-model="users" limits="limits" clone-content>
+      <table
+        st-table="$displayedItems"
+        st-safe-src="$sourceItems"
+        hz-table class="table-striped table-rsp table-detail modern">
+
+        <thead>
+
+          <tr ng-if="$isAvailableTable">
+            <th class="search-header" colspan="9">
+              <hz-search-bar group-classes="input-group-sm" icon-classes="fa-search">
+              </hz-search-bar>
+            </th>
+          </tr>
+
+          <tr>
+            <th st-sort="name" class="rsp-p1" translate>Username</th>
+            <th st-sort="email" class="rsp-p2" translate>Email</th>
+            <th st-sort="enabled" class="rsp-p1" translate>Enabled</th>
+            <th st-sort="role" class="rsp-p2" translate ng-if="$isAllocatedTable">Role</th>
+            <th class="rsp-p1" translate>Actions</th>
+          </tr>
+        </thead>
+
+        <tbody>
+          <tr ng-repeat="user in $displayedItems track by user.id"
+              ng-if="$isAllocatedTable || ($isAvailableTable && !trCtrl.allocatedIds[user.id])">
+            <td class="rsp-p1">{$ user.name $}</td>
+            <td class="rsp-p2">{$ user.email $}</td>
+            <td class="rsp-p1">{$ user.enabled | yesno $}</td>
+            <td class="rsp-p2" ng-if="$isAllocatedTable">
+              <div class="dropdown">
+                <a class="btn btn-default dropdown-toggle role_button"
+                   id="rolesSelectDropdown"
+                   data-toggle="dropdown">
+                  <span class="roles_list">{$ membersCtrl.roleNames(user.roles) $}</span>
+                  <span class="fa fa-caret-down"></span>
+                </a>
+                <ul class="dropdown-menu">
+                  <li ng-repeat="role in user.roles">
+                    <a ng-click="membersCtrl.dropboxItemSelected(role); $event.stopPropagation();">
+                      <span ng-class="{'fa fa-check selected': role.selected}"></span>
+                      {$ role.name $}
+                    </a>
+                  </li>
+                </ul>
+              </div>
+            </td>
+
+            <td class="action-col">
+              <action-list>
+                <action ng-if="$isAllocatedTable"
+                        action-classes="'btn btn-sm btn-default'"
+                        callback="trCtrl.deallocate"
+                        item="user">
+                  <span class="fa fa-minus"></span>
+                </action>
+
+                <action ng-if="$isAvailableTable"
+                        action-classes="'btn btn-sm btn-default'"
+                        callback="trCtrl.allocate"
+                        item="user">
+                  <span class="fa fa-plus"></span>
+                </action>
+              </action-list>
+            </td>
+          </tr>
+        </tbody>
+      </table>
+    </transfer-table>
+  </div> <!-- end content -->
+</div> <!-- end controller -->
diff --git a/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/templates/projects/base.html b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/templates/projects/base.html
new file mode 100644
index 0000000..385ac2d
--- /dev/null
+++ b/openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/templates/projects/base.html
@@ -0,0 +1,11 @@
+{% extends 'base.html' %}
+
+{% block css %}
+  {% include "_stylesheets.html" %}
+
+  {% load compress %}
+  {% compress css %}
+    <link href='{{ STATIC_URL }}openstack_dashboard/dashboards/identity/static/dashboard/identity/projects/projects.scss'
+          type='text/scss' media='screen' rel='stylesheet' />
+  {% endcompress %}
+{% endblock %}
-- 
1.9.1

